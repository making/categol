sorry only japanese now!

* What's this?
hunchentoot上で動作するブログシステムです。
categoryで区切ってwikiのような軽い使い方を目的としています。

* Requirement
** Lisp
SBCLでしか動きません。1.0.30で動作確認しています。
以下のライブラリに依存しています
- hunchentoot
- cl-who
- clsql
- cl-markdown (最新版では動いていないみたいのなのでコメントアウト中です)
** DataBase
MySQLが必須です。
現在MySQLにしか対応していません。

* Getting Started
** Install
clbuildの場合
projectsに
categol get_git git://github.com/making/categol.git
を追加
dependenciesに
categol hunchentoot cl-who clsql cl-markdown
を追加して
{clbuild_home}/clbuild install categol
を実行してください。
もし、hunchentoot, cl-who, clsql, cl-markdownのいずれかの
インスールがまだであればこれらの{clbuild_home}/clbuild installも行ってください。

** DataBase
データベース構築は
{clbuild_home}/source/categol/sql/ddl-blog.sql
をmysqlに食わせることでできます。
mysql -u root < {clbuild_home}/source/sql/ddl-blog.sql 
ユーザー、ホストはconfig.sexpに合わせてください。

MySQLは大文字小文字の区別を無視する設定が必要です。
以下のようにMySQL起動スクリプト中のmysqld_safeコマンドのオプションに
--lower_case_table_names=1を追加してください。

/usr/bin/mysqld_safe --lower_case_table_names=1

** Insert User
はじめに追加するユーザーをスクリプトでinsertできます。
cd {clbuild_home}/source/categol/tools
{clbuild_home}/clbuild lisp --load insert-user.lisp {name} {password}
で。{clbuild_home}/source/categol/config.sexpのDB設定を済ませておく必要があります。

** Stand Alone
hunchentootをCategoL専用に使う場合。
実行ディレクトリに
{clbuild_home}/source/categol/examples/stand-alone/config.sexp
{clbuild_home}/source/categol/examples/stand-alone/parts.sexp
のリンクを貼り、
config.sexpのIPアドレスやホスト名を適当に設定して
(require :categol-stand-alone)
(categol-stand-alone:start)
で起動です。
** Static File URL
CategoLでは現時点ではCSS/JS/画像などの静的ファイルのリクエスト処理はapacheに委譲しています。
defaultの設定ではapacheのルートディレクトリに{clbuild_home}/source/categol/resourcesの
リンクを貼ってください。
ubuntuの場合
ln -s {clbuild_home}/source/categol/resources /var/www/
で。